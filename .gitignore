struct pacijent{
	char ime[15],prezime[15],spol[2];
	int dan,mjesec,godina;
	int ai,bi,ci,di,ei;
};
struct red{
	pacijent element[10000];
	int zacelje,celo;
};
int AddOne(int n) {
	return ((n+1)%10000);
}
red* InitQ(red* Q){
	Q=new red;
	Q->celo=0;
	Q->zacelje=9999;
	return Q;
}
pacijent FrontQ(red *Q){
	return Q->element[Q->celo];
}
void EnQueueQ(pacijent x,red *Q){
	Q->zacelje=AddOne(Q->zacelje);
	Q->element[Q->zacelje]=x;
}
void DeQueueQ(red *Q){
	Q->celo=AddOne(Q->celo);
}
bool IsEmptyQ(red *Q){
	if(AddOne(Q->celo)==Q->zacelje)return true;
	return false;
}
